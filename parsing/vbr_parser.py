class transfer_form:
	def byte_to_hex(self, byte): 
		return "0x{:02x}".format(ord(byte))
		return hex(ord(byte))

	def little_big(self, little_address):
		little_address.reverse()
		big_address = int(little_address[0],16)
		for byte in little_address[1:]:
			big_address *= 0x100
			big_address += int(byte,16)
		little_address.reverse()
		if len(little_address) == 2: return "0x{:04x}".format(big_address,16)
		if len(little_address) == 3: return "0x{:06x}".format(big_address,16)
		if len(little_address) == 4: return "0x{:08x}".format(big_address,16)
		return "except"

	def print_list(self, data_list):
		counter = 0
		for each_data_list in data_list:
			counter += 1
			print each_data_list,
			if counter % 0x10 == 0: print
		if counter % 0x10 != 0: print

class vbr:
	def __init__(self, vbr_data):
		self.jump	= vbr_data[0:3]
		self.OEM	= vbr_data[3:11]
		self.BPB	= vbr_data[11:36]
		self.Ex_BPB	= vbr_data[36:84]
		self.bootstrap	= vbr_data[84:510]
		self.signature	= vbr_data[510:512]

	def print_vbr(self):
		print("jump"		+ str(self.jump))
		print("OEM"			+ str(self.OEM))
		print("BPB"			+ str(self.BPB))
		print("bootstrap"	+ str(self.bootstrap))
		print("signature"	+ str(self.signature))

def vbr_parser():
	try:
		with open("../imaging/younus2-origin", "rb") as f:
			vbr = f.read(512)
			vbr_list = []
			for vbr_byte in vbr:
				vbr_list.append(transfer_form().byte_to_hex(vbr_byte))
			print("Success to read vbr")
			return vbr_list
	except IOError as e:	# etc
		print(e)
		backup_list = [
		'0xeb', '0x52', '0x90', '0x4e', '0x54', '0x46', '0x53', '0x20', 
		'0x20', '0x20', '0x20', '0x00', '0x02', '0x08', '0x00', '0x00', 
		'0x00', '0x00', '0x00', '0x00', '0x00', '0xf8', '0x00', '0x00', 
		'0x3f', '0x00', '0xff', '0x00', '0x00', '0x00', '0x00', '0x00', 
		'0x00', '0x00', '0x00', '0x00', '0x80', '0x00', '0x00', '0x00', 
		'0xff', '0x3f', '0x3c', '0x00', '0x00', '0x00', '0x00', '0x00', 
		'0xaa', '0x82', '0x02', '0x00', '0x00', '0x00', '0x00', '0x00', 
		'0x02', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', 
		'0xf6', '0x00', '0x00', '0x00', '0x01', '0x00', '0x00', '0x00', 
		'0x0a', '0xb9', '0x48', '0x7e', '0xd4', '0x48', '0x7e', '0x4c', 
		'0x00', '0x00', '0x00', '0x00', '0xfa', '0x33', '0xc0', '0x8e', 
		'0xd0', '0xbc', '0x00', '0x7c', '0xfb', '0x68', '0xc0', '0x07', 
		'0x1f', '0x1e', '0x68', '0x66', '0x00', '0xcb', '0x88', '0x16', 
		'0x0e', '0x00', '0x66', '0x81', '0x3e', '0x03', '0x00', '0x4e', 
		'0x54', '0x46', '0x53', '0x75', '0x15', '0xb4', '0x41', '0xbb', 
		'0xaa', '0x55', '0xcd', '0x13', '0x72', '0x0c', '0x81', '0xfb', 
		'0x55', '0xaa', '0x75', '0x06', '0xf7', '0xc1', '0x01', '0x00', 
		'0x75', '0x03', '0xe9', '0xdd', '0x00', '0x1e', '0x83', '0xec', 
		'0x18', '0x68', '0x1a', '0x00', '0xb4', '0x48', '0x8a', '0x16', 
		'0x0e', '0x00', '0x8b', '0xf4', '0x16', '0x1f', '0xcd', '0x13', 
		'0x9f', '0x83', '0xc4', '0x18', '0x9e', '0x58', '0x1f', '0x72', 
		'0xe1', '0x3b', '0x06', '0x0b', '0x00', '0x75', '0xdb', '0xa3', 
		'0x0f', '0x00', '0xc1', '0x2e', '0x0f', '0x00', '0x04', '0x1e', 
		'0x5a', '0x33', '0xdb', '0xb9', '0x00', '0x20', '0x2b', '0xc8', 
		'0x66', '0xff', '0x06', '0x11', '0x00', '0x03', '0x16', '0x0f', 
		'0x00', '0x8e', '0xc2', '0xff', '0x06', '0x16', '0x00', '0xe8', 
		'0x4b', '0x00', '0x2b', '0xc8', '0x77', '0xef', '0xb8', '0x00', 
		'0xbb', '0xcd', '0x1a', '0x66', '0x23', '0xc0', '0x75', '0x2d', 
		'0x66', '0x81', '0xfb', '0x54', '0x43', '0x50', '0x41', '0x75', 
		'0x24', '0x81', '0xf9', '0x02', '0x01', '0x72', '0x1e', '0x16', 
		'0x68', '0x07', '0xbb', '0x16', '0x68', '0x70', '0x0e', '0x16', 
		'0x68', '0x09', '0x00', '0x66', '0x53', '0x66', '0x53', '0x66', 
		'0x55', '0x16', '0x16', '0x16', '0x68', '0xb8', '0x01', '0x66', 
		'0x61', '0x0e', '0x07', '0xcd', '0x1a', '0x33', '0xc0', '0xbf', 
		'0x28', '0x10', '0xb9', '0xd8', '0x0f', '0xfc', '0xf3', '0xaa', 
		'0xe9', '0x5f', '0x01', '0x90', '0x90', '0x66', '0x60', '0x1e', 
		'0x06', '0x66', '0xa1', '0x11', '0x00', '0x66', '0x03', '0x06', 
		'0x1c', '0x00', '0x1e', '0x66', '0x68', '0x00', '0x00', '0x00', 
		'0x00', '0x66', '0x50', '0x06', '0x53', '0x68', '0x01', '0x00', 
		'0x68', '0x10', '0x00', '0xb4', '0x42', '0x8a', '0x16', '0x0e', 
		'0x00', '0x16', '0x1f', '0x8b', '0xf4', '0xcd', '0x13', '0x66', 
		'0x59', '0x5b', '0x5a', '0x66', '0x59', '0x66', '0x59', '0x1f', 
		'0x0f', '0x82', '0x16', '0x00', '0x66', '0xff', '0x06', '0x11', 
		'0x00', '0x03', '0x16', '0x0f', '0x00', '0x8e', '0xc2', '0xff', 
		'0x0e', '0x16', '0x00', '0x75', '0xbc', '0x07', '0x1f', '0x66', 
		'0x61', '0xc3', '0xa0', '0xf8', '0x01', '0xe8', '0x09', '0x00', 
		'0xa0', '0xfb', '0x01', '0xe8', '0x03', '0x00', '0xf4', '0xeb', 
		'0xfd', '0xb4', '0x01', '0x8b', '0xf0', '0xac', '0x3c', '0x00', 
		'0x74', '0x09', '0xb4', '0x0e', '0xbb', '0x07', '0x00', '0xcd', 
		'0x10', '0xeb', '0xf2', '0xc3', '0x0d', '0x0a', '0x41', '0x20', 
		'0x64', '0x69', '0x73', '0x6b', '0x20', '0x72', '0x65', '0x61', 
		'0x64', '0x20', '0x65', '0x72', '0x72', '0x6f', '0x72', '0x20', 
		'0x6f', '0x63', '0x63', '0x75', '0x72', '0x72', '0x65', '0x64', 
		'0x00', '0x0d', '0x0a', '0x42', '0x4f', '0x4f', '0x54', '0x4d', 
		'0x47', '0x52', '0x20', '0x69', '0x73', '0x20', '0x6d', '0x69', 
		'0x73', '0x73', '0x69', '0x6e', '0x67', '0x00', '0x0d', '0x0a', 
		'0x42', '0x4f', '0x4f', '0x54', '0x4d', '0x47', '0x52', '0x20', 
		'0x69', '0x73', '0x20', '0x63', '0x6f', '0x6d', '0x70', '0x72', 
		'0x65', '0x73', '0x73', '0x65', '0x64', '0x00', '0x0d', '0x0a', 
		'0x50', '0x72', '0x65', '0x73', '0x73', '0x20', '0x43', '0x74', 
		'0x72', '0x6c', '0x2b', '0x41', '0x6c', '0x74', '0x2b', '0x44', 
		'0x65', '0x6c', '0x20', '0x74', '0x6f', '0x20', '0x72', '0x65', 
		'0x73', '0x74', '0x61', '0x72', '0x74', '0x0d', '0x0a', '0x00', 
		'0x8c', '0xa9', '0xbe', '0xd6', '0x00', '0x00', '0x55', '0xaa']
		print("Success to open backup")
		return backup_list

def main():
	vbr_data= vbr_parser()
	transfer_form().print_list(vbr_data)
	vbr(vbr_data).print_vbr()

if __name__ == "__main__":
	main()